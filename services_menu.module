<?php

define('SERVICES_MENU_RETRIEVE_MENU', 'services menu retrieve menu');

/**
 * Implements hook_permission().
 */
function services_menu_permission() {
  return array(
    SERVICES_MENU_RETRIEVE_MENU => array(
      'title' => t('Get menu'),
    ),
  );
}

/**
 * Implements hook_services_resources().
 */
function services_menu_services_resources() {
  return array(
    'menu' => array(
      'retrieve' => array(
        'help' => 'Retrieves a menu',
        'file' => array(
          'type' => 'inc',
          'module' => 'services_menu',
          'name' => 'services_menu.resource'
        ),
        'callback' => '_services_menu_retrieve',
        'access callback' => '_services_menu_access',
        'access arguments' => array('view'),
        'access arguments append' => TRUE,
        'args' => array(
          array(
            'name' => 'menu_name',
            'type' => 'string',
            'description' => 'The name of the menu to get',
            'source' => array('path' => '0'),
            'optional' => FALSE,
          ),
        ),
      ),
    ),
  );
}

/**
 * Access callback for the menu resource.
 *
 * @param string $op
 *  The operation that's going to be performed.
 * @param array $args
 *  The arguments that will be passed to the callback.
 * @return bool
 *  Whether access is given or not.
 */
function _services_menu_access($op = 'view', $args = array()) {

  global $user;
  $access = FALSE;

  switch ($op) {
    case 'view':

      $access = user_access(SERVICES_MENU_RETRIEVE_MENU);

      if (!in_array($args[0], menu_get_names()))
        return services_error(t('Menu @menu_name could not be found', array('@menu_name' => $args['menu_name'])), 404);

      break;
  }

  return $access;
}